name: Windows build

on:
  push:
    branches: [ master, develop, 0.9.*, windows-build ]
    tags: 0.9.*
    
  pull_request:
    branches: [ master, develop, 0.9.* ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        qt: ['5.15.0'] 
    
    defaults:
      run:
       shell: msys2 {0}

    steps:
    - uses: actions/checkout@v2
     
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: base-devel mingw-w64-x86_64-make mingw-w64-x86_64-gcc mingw-w64-x86_64-postgresql mingw-w64-x86_64-qt5
                     
    # Workaround: Instead of using $GITHUB_WORKSPACE in PREFIX we actually use the path converted to unix-like
    # since we're running the building inside msys2
    - name: Running qmake
      run: |
        cd $GITHUB_WORKSPACE;
        qmake pgmodeler.pro -r CONFIG+=release PREFIX=D:/a/pgmodeler/pgmodeler/build \
          XML_INC=$(cygpath -m /mingw64/include/libxml2) \
          XML_LIB=$(cygpath -m /mingw64/bin/libxml2-2.dll) \
          PGSQL_INC=$(cygpath -m /mingw64/include) \
          PGSQL_LIB=$(cygpath -m /mingw64/bin/libpq.dll)

    - name: Building pgModeler
      run: mingw32-make -j6
     
    - name: Deploying pgModeler
      run: mingw32-make install
     
    - name: windeploy
      run: cd D:/a/pgmodeler/pgmodeler/build && windeployqt pgmodeler.exe pgmodeler_ui.dll
     
    - name: link dlls
      run: cd /mingw64/bin/ &&  cp libicuin*.dll libicuuc*.dll libicudt*.dll libpcre2-16-0.dll libharfbuzz-0.dll \
        libpng16-16.dll libfreetype-6.dll libgraphite2.dll libglib-2.0-0.dll libpcre-1.dll \
        libbz2-1.dll libssl-1_1-x64.dll libcrypto-1_1-x64.dll libgcc_s_seh-1.dll \
        libstdc++-6.dll libwinpthread-1.dll zlib1.dll libpq.dll libxml2-2.dll liblzma-5.dll \
        libiconv-2.dll libintl-8.dll libbrotlidec.dll libbrotlicommon.dll D:/a/pgmodeler/pgmodeler/build

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: D:/a/pgmodeler/pgmodeler/build
